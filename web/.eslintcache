[{"C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\pages\\TeacherForm\\index.tsx":"1","C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\components\\Errors\\styles.ts":"2","C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\App.tsx":"3"},{"size":8929,"mtime":1610556216494,"results":"4","hashOfConfig":"5"},{"size":165,"mtime":1610555755813,"results":"6","hashOfConfig":"5"},{"size":224,"mtime":1610556323146,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"3donwo",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\pages\\TeacherForm\\index.tsx",["15","16","17","18","19","20","21"],"import React, { FormEvent, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../../components/Inputs\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport Textarea from \"../../components/Textarea\";\r\n\r\nimport warningIcon from \"../../assets/images/icons/warning.svg\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Select from \"../../components/Select\";\r\nimport api from \"../../services/api\";\r\nimport Errors from \"../../components/Errors\";\r\n\r\nconst TeacherList: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    avatar: \"\",\r\n    whatsapp: \"\",\r\n    bio: \"\",\r\n    subject: \"\",\r\n    cost: \"\",\r\n    scheduleItems: [\r\n      {\r\n        week_day: 0,\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .required(\"campo obrigatório\")\r\n      .min(3, \"Mínimo de 3 caracteres\"),\r\n    avatar: Yup.string().required(\"campo obrigatório\").url(),\r\n    whatsapp: Yup.string()\r\n      .required(\"campo obrigatório\")\r\n      .test(\"teste\", \"Digite um número válido\", (value) => {\r\n        if (value !== undefined && value !== null) {\r\n          const { length } = value.replace(/[^\\d]+/g, \"\");\r\n          return !(length > 11 || length < 10);\r\n        }\r\n        return false;\r\n      }),\r\n    bio: Yup.string().max(600, \"Limite excedido\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: (): void => {\r\n      const response = api\r\n        .post(\"classes\", {\r\n          name,\r\n          avatar,\r\n          whatsapp,\r\n          bio,\r\n          subject,\r\n          cost: Number(cost),\r\n          schedule: scheduleItems,\r\n        })\r\n        .then(() => {\r\n          alert(\"Cadastro efetuado com sucesso\");\r\n          history.push(\"/\");\r\n        })\r\n        .catch(() => {\r\n          alert(\"Erro no cadastro\");\r\n        });\r\n      console.log({\r\n        response,\r\n      });\r\n    },\r\n  });\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [whatsapp, setWhatsapp] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n\r\n  const [scheduleItems, setScheduleItems] = useState([\r\n    { week_day: 0, from: \"\", to: \"\" },\r\n  ]);\r\n\r\n  function addNewScheduleItem(): void {\r\n    setScheduleItems([...scheduleItems, { week_day: 0, from: \"\", to: \"\" }]);\r\n  }\r\n\r\n  function handleCreateClass(e: FormEvent): void {\r\n    e.preventDefault();\r\n\r\n    api\r\n      .post(\"classes\", {\r\n        name,\r\n        avatar,\r\n        whatsapp,\r\n        bio,\r\n        subject,\r\n        cost: Number(cost),\r\n        schedule: scheduleItems,\r\n      })\r\n      .then(() => {\r\n        alert(\"Cadastro efetuado com sucesso\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        alert(\"Erro no cadastro\");\r\n      });\r\n    console.log({ name, avatar, whatsapp, bio, subject, cost, scheduleItems });\r\n  }\r\n\r\n  function setScheduleItemValue(\r\n    position: number,\r\n    field: string,\r\n    value: string\r\n  ) {\r\n    const updateScheduleItems = scheduleItems.map((scheduleItem, index) => {\r\n      if (index === position) {\r\n        return { ...scheduleItem, [field]: value };\r\n      }\r\n\r\n      return scheduleItem;\r\n    });\r\n\r\n    setScheduleItems(updateScheduleItems);\r\n  }\r\n\r\n  return (\r\n    <S.Container>\r\n      <PageHeader\r\n        title=\"Que incrível que você quer dar aulas.\"\r\n        description=\"O primeiro passo é preencher esse formulário de inscrição\"\r\n      >\r\n        <S.Main>\r\n          <S.Form onSubmit={formik.handleSubmit}>\r\n            <S.Fieldset>\r\n              <S.Legend>Seus dados</S.Legend>\r\n              <Input\r\n                name=\"name\"\r\n                label=\"Nome Completo\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n\r\n              {formik.errors.name && formik.touched.name && (\r\n                <Errors>{formik.errors.name}</Errors>\r\n              )}\r\n\r\n              <Input\r\n                name=\"avatar\"\r\n                label=\"Avatar\"\r\n                value={formik.values.avatar}\r\n                onChange={formik.handleChange}\r\n              />\r\n\r\n              {formik.errors.avatar && formik.touched.avatar && (\r\n                <Errors>{formik.errors.avatar}</Errors>\r\n              )}\r\n\r\n              <InputMask\r\n                mask=\"(99) 9 9999-9999\"\r\n                value={formik.values.whatsapp}\r\n                onChange={formik.handleChange}\r\n              >\r\n                {() => <Input name=\"whatsapp\" label=\"WhatsApp\" />}\r\n              </InputMask>\r\n\r\n              {formik.errors.whatsapp && formik.touched.whatsapp && (\r\n                <Errors>{formik.errors.whatsapp}</Errors>\r\n              )}\r\n\r\n              <Textarea\r\n                name=\"bio\"\r\n                label=\"Biografia\"\r\n                value={formik.values.bio}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </S.Fieldset>\r\n\r\n            <S.Fieldset>\r\n              <S.Legend>Sobre a aula</S.Legend>\r\n              <Select\r\n                name=\"subject\"\r\n                label=\"Matéria\"\r\n                value={formik.values.subject}\r\n                onChange={formik.handleChange}\r\n                options={[\r\n                  { value: \"Artes\", label: \"Artes\" },\r\n                  { value: \"Biologia\", label: \"Biologia\" },\r\n                  { value: \"Ciências\", label: \"Ciências\" },\r\n                  { value: \"Educação Física\", label: \"Educação Física\" },\r\n                  { value: \"Física\", label: \"Física\" },\r\n                  { value: \"Geografia\", label: \"Geografia\" },\r\n                  { value: \"História\", label: \"História\" },\r\n                  { value: \"Matématica\", label: \"Matématica\" },\r\n                  { value: \"Português\", label: \"Português\" },\r\n                  { value: \"Química\", label: \"Química\" },\r\n                ]}\r\n              />\r\n              <Input\r\n                name=\"cost\"\r\n                label=\"Custo da sua hora por aula\"\r\n                value={formik.values.cost}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </S.Fieldset>\r\n            {formik.errors.cost && formik.touched.cost && (\r\n              <Errors>{formik.errors.cost}</Errors>\r\n            )}\r\n\r\n            <S.Fieldset>\r\n              <S.Legend>\r\n                Horários disponíveis\r\n                <S.ButtonNewSchedule type=\"button\" onClick={addNewScheduleItem}>\r\n                  + Novo horário\r\n                </S.ButtonNewSchedule>\r\n              </S.Legend>\r\n\r\n              {scheduleItems.map((scheduleItem, index) => {\r\n                return (\r\n                  <S.ScheduleItem key={scheduleItem.week_day}>\r\n                    <Select\r\n                      name=\"week-day\"\r\n                      label=\"Dia da semana\"\r\n                      value={formik.values.scheduleItems[0].week_day}\r\n                      onChange={formik.handleChange}\r\n                      options={[\r\n                        { value: \"0\", label: \"Domingo\" },\r\n                        { value: \"1\", label: \"Segunda-feria\" },\r\n                        { value: \"2\", label: \"Terça-feira\" },\r\n                        { value: \"3\", label: \"Quarta-feira\" },\r\n                        { value: \"4\", label: \"Quinta-feira\" },\r\n                        { value: \"5\", label: \"Sexta-feira\" },\r\n                        { value: \"6\", label: \"Sábado\" },\r\n                      ]}\r\n                    />\r\n\r\n                    <Input\r\n                      name=\"from\"\r\n                      label=\"Das\"\r\n                      type=\"time\"\r\n                      value={scheduleItem.from}\r\n                      onChange={(e) =>\r\n                        setScheduleItemValue(index, \"from\", e.target.value)\r\n                      }\r\n                    />\r\n                    <Input\r\n                      name=\"to\"\r\n                      label=\"Até\"\r\n                      type=\"time\"\r\n                      value={scheduleItem.to}\r\n                      onChange={(e) =>\r\n                        setScheduleItemValue(index, \"to\", e.target.value)\r\n                      }\r\n                    />\r\n                  </S.ScheduleItem>\r\n                );\r\n              })}\r\n            </S.Fieldset>\r\n\r\n            <S.Footer>\r\n              <S.P>\r\n                <S.ImgInfo src={warningIcon} />\r\n                Importante! <br />\r\n                Preencha todos os dados\r\n              </S.P>\r\n              <S.Button type=\"submit\">Salvar cadastro</S.Button>\r\n            </S.Footer>\r\n          </S.Form>\r\n        </S.Main>\r\n      </PageHeader>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default TeacherList;\r\n","C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\components\\Errors\\styles.ts",[],"C:\\Users\\jorda\\Documents\\projects\\pessoal\\proffy\\web\\src\\App.tsx",[],{"ruleId":"22","severity":1,"message":"23","line":80,"column":16,"nodeType":"24","messageId":"25","endLine":80,"endColumn":23},{"ruleId":"22","severity":1,"message":"26","line":81,"column":18,"nodeType":"24","messageId":"25","endLine":81,"endColumn":27},{"ruleId":"22","severity":1,"message":"27","line":82,"column":20,"nodeType":"24","messageId":"25","endLine":82,"endColumn":31},{"ruleId":"22","severity":1,"message":"28","line":83,"column":15,"nodeType":"24","messageId":"25","endLine":83,"endColumn":21},{"ruleId":"22","severity":1,"message":"29","line":85,"column":19,"nodeType":"24","messageId":"25","endLine":85,"endColumn":29},{"ruleId":"22","severity":1,"message":"30","line":86,"column":16,"nodeType":"24","messageId":"25","endLine":86,"endColumn":23},{"ruleId":"22","severity":1,"message":"31","line":96,"column":12,"nodeType":"24","messageId":"25","endLine":96,"endColumn":29},"@typescript-eslint/no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","'setAvatar' is assigned a value but never used.","'setWhatsapp' is assigned a value but never used.","'setBio' is assigned a value but never used.","'setSubject' is assigned a value but never used.","'setCost' is assigned a value but never used.","'handleCreateClass' is defined but never used."]